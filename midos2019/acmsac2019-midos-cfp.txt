               MiDOS track at SAC

                Call for Papers

Microservices, DevOps, and Service-Oriented Architecture
of the 34th ACM/SIGAPP Symposium On Applied Computing 

        8-12 April 2019, Nicosia, Cyprus

             http://sac-midos.sdu.dk/


        IMPORTANT DATES

September 10, 2018: Submission of regular papers and SRC research abstracts
November 10, 2018: Notification of paper and SRC acceptance/rejection
November 25, 2018: Camera-ready copies of accepted papers/SRC
December 10, 2018: Author registration due date


        ACM SAC 2019

For the past thirty years, the ACM Symposium on Applied Computing 
has been a primary gathering forum for applied computer scientists, 
computer engineers, software engineers, and application developers 
from around the world. SAC 2018 is sponsored by the ACM Special 
Interest Group on Applied Computing (SIGAPP), and will be held in 
Pau (France).


        SOAP TRACK: CALL FOR PAPERS

Service-oriented architectures have changed our vision of the Web, bringing a
paradigmatic shift in the methodologies when designing and implementing
distributed systems. Originally, the Web was mainly seen as a means of
presenting information to a wide spectrum of people, but service-oriented
programming triggered a radical transformation of the Web towards a
computational fabric where loosely coupled services interact, can be discovered
and then invoked. More recently, the microservices architectural style has been
proposed, where applications are developed as a collection of fine-grained
services running as independent processes. Distributed applications can then be
constructed from independently deployable services taking advantage of the
properties of the microservice architecture (e.g., flexibility, maintainability,
reusability, compositionality, and scalability) as well as the elasticity of
cloud infrastructure. From the practical point of view, the deployment and
maintenance of (micro)services architectures is performed using DevOps, i.e.,  a
collection of practices linking software development (Dev) with software
operations (Ops). DevOps strongly advocates for automation and monitoring at all
steps of software construction, from integration, testing, releasing to
deployment and infrastructure management. By using the DevOps methodology, it is
possible to reduce the time between committing a change to a system and the
change being placed into normal production, while ensuring high quality.

The complex scenario of (Micro)Services and DevOps needs to be clarified on many
aspects, both from the engineering and from the foundational points of
view. From the engineering point of view, there are open issues at many
levels. Among others, at the system design level, both traditional approaches
based on UML and approaches inspired from business process modelling are
used. At the composition level, both the orchestration and choreography views
have their supporters. At the description and discovery level, there are two
separate communities pushing respectively the semantic approach (e.g.,
ontologies, OWL) and the syntactic one (e.g., WSDL). At the deployment level,
different tools and methodologies are being developed to test, monitor,
configure, and strive for always more automatization of the continuous
integration and deployment workflows. Finally, features like Quality of Service,
security and dependability must be taken seriously into account, and this
investigation should lead to standard proposals.

From the foundational point of view, researchers have discussed widely in the
last years, and many attempts to use formal methods, declarative languages, and
optimization tools for the specification, verification and deployment of complex
distributed applications. Session correlation, service types, contract theories,
communication patterns and configuration optimizers are only a few examples of
the aspects that have been investigated. However, most of such approaches
concentrate on a few features of Service-Oriented Systems in isolation, and a
comprehensive approach is still far from being accomplished.

Our track aims to bring together researchers and practitioners having the common
objective of transforming Service-Oriented, DevOps, and Microservice practices
into a mature discipline with both solid scientific foundations and mature
software engineering development methodologies supported by dedicated tools. In
particular, we will encourage works and discussions about what (Micro)Services
and DevOps still need in order to achieve their goal.


        TOPICS OF INTEREST

- Formal methods for specification of (Micro)Services
- Methodologies and tools for Service-Oriented application design
- Methodologies and tools for DevOps
- Service-Oriented Middlewares
- Service-Oriented Programming languages
- Test methodologies for Service-Oriented applications
- Analysis techniques and tools
- Service systems performance analysis
- Industrial deployment of tools and methodologies
- Standards for Service Oriented Programming
- Continuous Integration and Deployment
- (Micro)Service application case studies
- Dependability and Services
- Quality of Service
- Cybersecurity and Services
- Comparisons between different approaches to Services
- Exception handling in composition languages
- Trust and Services
- Sustainability and Services, Green Computing
- Adaptable Services
- Empirical research or Experiences on (Micro)Services and DevOps
- Failure cases



        SUBMISSIONS

Authors are invited to submit original unpublished papers. Submission
of the same paper to multiple tracks is not allowed. Peer groups with
expertise in the track focus area will double-blindly review submissions. 
Accepted papers will be published in the annual conference proceedings. 
MiDOS track chairs will not submit to the track. Submissions from MiDOS
PC members and from PC members and track chairs of other SAC tracks are 
welcome. Submission guidelines can be found on the SAC 2019 website:
    
	http://www.sigapp.org/sac/sac2019/

Prospective papers should be submitted to the track using the provided
automated submission system. Please pay attention to ensure anonymity
of your submitted manuscript as detailed in the submission page so to
allow for double-blind review. Papers not satisfying this constraint
will be automatically rejected. The maximum length for papers is 10
pages. Accepted papers whose camera-ready version will exceed 8 pages
will have to pay an extra charge. 

Paper registration is required, allowing the inclusion of the papers, 
posters, or SRC abstracts in the conference proceedings. An author or 
a proxy attending SAC MUST present the paper. This is a requirement for 
the presented work to be included in the ACM/IEEE digital library.
No-show of registered papers, posters, and SRC abstracts will result 
in excluding them from the ACM/IEEE digital library.


        SPECIAL ISSUE

We plan a special issue of a top-level journal for which we will invite 
the best papers. 


        STUDENT RESEARCH COMPETITION PROGRAM 

As before, SAC 2019 organizes a Student Research Competition (SRC)
Program to provide graduate students the opportunity to meet and
exchange ideas with researchers and practitioners in their areas of
interest.  Submission of research abstracts (maximum of 4 pages) to
the SRC program should be in electronic form via the SAC 2019 website:

	http://www.sigapp.org/conferences/sac/sac2019/

Submission of the same abstract to multiple tracks is not allowed. 
All research abstract submissions will be reviewed by researchers 
and practitioners with expertise in the track focus area to which 
they are submitted. Authors of selected abstracts will have the 
opportunity to give poster presentations of their work and compete
for three top-winning places. The Student Research Competition
committee will evaluate and select First-, Second-, and Third- place
winners. The winners will receive cash awards and SIGAPP recognition
certificates during the conference banquet. Authors of selected
abstracts are eligible to apply to the SIGAPP Student Travel Award
program for support.


        PC MEMBERS

Nazareno Aguirre (Universidad de Río Cuarto, AR)
Farhad Arbab (Leiden University and CWI, Amsterdam, NL)
Luís Barbosa (University of Minho, Braga, PT)
Maurice ter Beek (ISTI-CNR, IT)
Antonio Bucchiarone (FBK, Trento, IT)
Romain Demangeon (Université Pierre et Marie Curie, FR)
Shuiguang Deng (Zhejiang University, PRC)
Schahram Dustdar (Vienna University of Technology, AT)
Gian Luigi Ferrari (Università di Pisa, IT)
José Fiadeiro (Royal Holloway University of London, UK)
Saverio Giallorenzo (University of Bologna, IT)
Ross Horne (Nanyang Technological University, SG)
Vasileios Koutavas (Trinity College Dublin, IR)
Alberto Lluch Lafuente (Technical University of Denmark, DK)
Hernán Melgratti (University of Buenos Aires, AR)
Alberto Núñez (Universidad Complutense de Madrid, SP)
Jorge A. Perez (University of Groningen, NL)
Gustavo Petri (Université Paris Diderot - Paris 7, FR)
António Ravara (Universidade Nova de Lisboa, PT)
Victor Rivera (Innopolis University, RU)
Alceste Scalas (Imperial College London, UK)
Nikolay Shilov (Russian Academy of Sciences, Novosibirsk, RU)
Hugo Torres Vieira (IMT Lucca, IT)
Farouk Toumani (Université Blaise Pascal, FR)
Emilio Tuosto (University of Leicester, UK)
Yuhon Yan (Concordia University, CA)
Gianluigi Zavattaro (University of Bologna, IT)
Roberto Zunino (University of Trento, IT)

        TRACK CHAIRS

- Luís Cruz-Filipe (University of Southern Denmark, DK)
- Jacopo Mauro (University of Southern Denmark, DK)
- Elisabetta Di Nitto (Politecnico di Milano, IT)

        STEERING COMMITTEE

- Claudio Guidi (italianaSoftware, IT)
- Ivan Lanese (University of Bologna, IT and INRIA, FR)
- Manuel Mazzara (Innopolis University, RU)
- Fabrizio Montesi (University of Southern Denmark, DK)
